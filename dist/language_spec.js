"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ts_bccc_1 = require("ts-bccc");
var Lexer = require("./lexer");
var ccc_aux_1 = require("./ccc_aux");
exports.newline = ({ kind: "Newline" });
exports.indent = ({ kind: "Indent" });
exports.deindent = ({ kind: "Deindent" });
exports.int = function (s) { return !/^[0-9]+$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "int", v: parseInt(s) }); };
exports.float = function (s) { return !/^[0-9]+.[0-9]+$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "float", v: parseFloat(s) }); };
exports._if = function (s) { return !/^if$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "if" }); };
exports._eq = function (s) { return !/^=$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "=" }); };
exports._then = function (s) { return !/^then$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "then" }); };
exports._else = function (s) { return !/^else$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "else" }); };
exports.identifier = function (s) { return !/^[a-zA-Z][a-zA-Z0-9]*$/.test(s) ? ccc_aux_1.none().f({}) : ccc_aux_1.some().f({ kind: "identifier", v: s }); };
exports.tokenize = function (source) { return Lexer.tokenize(Lexer.pre_process_indentation(source), function (_) { return exports.newline; }, function (_) { return exports.indent; }, function (_) { return exports.deindent; }, ts_bccc_1.defun(ccc_aux_1.option_plus(ts_bccc_1.fun(exports.int), ccc_aux_1.option_plus(ts_bccc_1.fun(exports.float), ccc_aux_1.option_plus(ts_bccc_1.fun(exports._if), ccc_aux_1.option_plus(ts_bccc_1.fun(exports._eq), ccc_aux_1.option_plus(ts_bccc_1.fun(exports._then), ccc_aux_1.option_plus(ts_bccc_1.fun(exports._else), ts_bccc_1.fun(exports.identifier))))))))); };
