[ ] Move comm_list_co to CCC repo

[ ] IMP TYPE CHECKER
  [ ] File management
    [ ] Split into multiple files
  [ ] Classes
    [/] Definition
    [ ] References
    [ ] Constructor
    [ ] Field lookups
    [ ] Method calling

    [ ] Generics
    [ ] Polymorphism
      [ ] Inheritance
      [ ] Covariance/contravariance in function calls and variable assignments
    [ ] Structs
    [ ] Tuples
    [ ] Extension methods
    [ ] Static methods
    [ ] LINQ
[ ] IMP PARSER
  [ ] distributive laws applied to monadic combinators such as parallel/concurrent
  [ ] Python
  [ ] C#

[ ] Canvas/electron playground

[ ] Required for basic quality but not basic functionality
  [ ] localized errors everywhere (curried parameter, used for runtime/compiler errors!)
    [ ] lambda arguments in lambda type-checking errors
  [ ] breakpoint right after return (`ret_break?`)

[ ] Performance optimisations
  [ ] Use mutable state, then clone it to the immutable memory upon `dbg`
  [ ] Data-oriented memory: ints, floats, strings, ..., each an array for faster lookup
  [ ] Invoke statically typed semantics
[ ] Cleanup/whishlist
  [ ] `while` with fixpoint
  [ ] `resolve_method` with fixpoint
  [ ] Whole semantics must be fully categorical: no apply, almost everything becomes Fun<a,b>
  [ ] Garbage collection (and `heap_alloc` fills in the gaps)
  [ ] Memory values as sums (of basic types)
